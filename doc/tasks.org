
#+TITLE:Cross-Map Development Todo List 



- [-] Persistent Cross Map

  - [-]  Cross-platform:
    - [X] API wrappers
    - [ ] Introduce cross-platform error function/macro in util
    - [X] Create helper function for cross-rows and cross-cols
    - [ ] Create a helper function for double-cross
    - [ ] Transient helper functions (if necessary)
  - [-] CLJ version
    - [X] Stubs
    - [X] Port implementation
    - [X] crossIndexRows and crossIndexColumns
    - [X] row-column cross-indexing
    - [ ] Transient implementation
  - [-] CLJS version
    - [X] Stubs 
    - [ ] Make separate implementation based on PersistentHashMap
    - [ ] Transient implementation
  - [-] Test
    - [-] Write comprehensive tests
      - [X] Write a slow function to produce the same output as crosing
      - [ ] Include tests with pair-indices
      - [ ] Include tests with non-pair indices
    - [ ] Test on both CLJ and CLJS platforms
  - [ ] Misc
    - [ ] Function that outputs to CSV (tab-separated or filter out commas)



* Test Matrix
  A matrix to cover all the testing configurations
  2 x 2 x 3 x 2 = 24
  |  / | :any-row   | :any-col   | :keys-only | :by-rows |   |   |   |
  |  / | :every-row | :every-col | :vals-only | :by-cols |   |   |   |
  |  / |            |            | default    |          |   |   |   |
  |----+------------+------------+------------+----------+---+---+---|

  


* Test-Map as Row/Column Table
  | / | :a | :b | :c | :d | :e | :f | :g | :h | :i | :j |
  |---+----+----+----+----+----+----+----+----+----+----|
  | 0 |    |    |    |    |    |    |    |    |    |    |
  | 1 |    |    |    |    |    |    |    |    |    |    |
  | 2 |    |    |    |    |    |    |    |    |    |    |
  | 3 |    |    |    |    |    |    |    |    |    |    |
  | 4 |    |    |    |    |    |    |    |    |    |    |
  | 5 |    |    |    |    |    |    |    |    |    |    |
  | 6 |    |    |    |    |    |    |    |    |    |    |
  | 7 |    |    |    |    |    |    |    |    |    |    |
  | 8 |    |    |    |    |    |    |    |    |    |    |
  | 9 |    |    |    |    |    |    |    |    |    |    |

** Expected results from operations
