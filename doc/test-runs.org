
  | / | :a    | :g   |
  |---+-------+------|
  | 4 | *nil* | :g_4 |
  | 9 | :a_9  | :g_9 |

Fail in rand-cross-test
expected: (=
 (set (cross test-cmap row-keys col-keys))
 (set (cross test-cmap row-keys col-keys :every-row :every-col))
 (cross-test-helper test-cmap row-keys col-keys true true))
  actual: (not
 (= #{[[9 :a] :a_9] [[9 :g] :g_9] [[4 :g] :g_4]} #{[[9 :g] :g_9]} #{}))

Fail in rand-cross-test
expected: (=
 (set (cross test-cmap row-keys col-keys :every-row :any-col))
 (cross-test-helper test-cmap row-keys col-keys true false))
  actual: (not
 (=
  #{[[9 :g] :g_9] [[4 :g] :g_4]}
  #{[[9 :a] :a_9] [[9 :g] :g_9] [[4 :g] :g_4]}))

Fail in rand-cross-test
expected: (=
 (set (cross test-cmap row-keys col-keys :any-row :every-col))
 (cross-test-helper test-cmap row-keys col-keys false true))
  actual: (not (= #{[[9 :a] :a_9] [[9 :g] :g_9]} #{}))


  | / | :a    | :h   |
  |---+-------+------|
  | 2 | :a_2  | :h_2 |
  | 9 | *nil* | :h_9 |

Fail in rand-cross-test
expected: (=
 (set (cross test-cmap row-keys col-keys))
 (set (cross test-cmap row-keys col-keys :every-row :every-col))
 (cross-test-helper test-cmap row-keys col-keys true true))
  actual: (not
 (= #{[[2 :h] :h_2] [[9 :h] :h_9] [[2 :a] :a_2]} #{[[2 :h] :h_2]} #{}))

Fail in rand-cross-test
expected: (=
 (set (cross test-cmap row-keys col-keys :every-row :any-col))
 (cross-test-helper test-cmap row-keys col-keys true false))
  actual: (not
 (=
  #{[[2 :h] :h_2] [[9 :h] :h_9]}
  #{[[2 :h] :h_2] [[9 :h] :h_9] [[2 :a] :a_2]}))

Fail in rand-cross-test
expected: (=
 (set (cross test-cmap row-keys col-keys :any-row :every-col))
 (cross-test-helper test-cmap row-keys col-keys false true))
  actual: (not (= #{[[2 :h] :h_2] [[2 :a] :a_2]} #{}))
